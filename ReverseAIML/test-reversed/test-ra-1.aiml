<?xml version="1.0" encoding="ISO-8859-1"?>
<aiml>
<!--

I prefer using one of the native XML extensions, like DOM or XMLReader. If you prefer a 3rd party lib, I'd suggest not to use SimpleHtmlDom, but a lib that actually uses DOM/libxml underneath instead of String Parsing: phpQuery, Zend_Dom, QueryPath, FluentDom or fDOMDocument. You can use the above for parsing HTML5, but there can be quirks due to the markup HTML5 allows. So for HTML5 you want to consider using a dedicated parser, like: html5lib. Or use a WebService like: YQL or ScraperWiki. If you want to spend some money, have a look at: PHP Architects Guide to Webscraping with PHP. Last and least recommended, you can extract data from HTML with Regular Expressions. In general using Regular Expressions on HTML is discouraged. The snippets you will usually find on the web to match markup are brittle. In most cases they are only working for a very particular piece of HTML. Once the markup changes, the Regex fails. You can write more reliable parsers, but writing a complete and reliable custom parser with Regular Expressions is a waste of time when the aforementioned libraries already exist and do a much better and likely faster job on this. Also see Parsing Html The Cthulhu Way.

-->

<category> <pattern> DO I PREFER USING ONE OF THE NATIVE XML EXTENSIONS LIKE DOM OR XMLREADER </pattern> <template> <set name="ans"> yes </set>. I prefer using one of the native XML extensions like DOM or XMLReader </template> </category>
<category> <pattern> WHAT DO I PREFER </pattern> <template> <set name="ans"> using one of the native XML extensions like DOM or XMLReader </set>. I prefer using one of the native XML extensions like DOM or XMLReader </template> </category>
<category> <pattern> WHAT PREFERS USING ONE OF THE NATIVE XML EXTENSIONS LIKE DOM OR XMLREADER </pattern> <template> <set name="ans"> I </set>. I prefer using one of the native XML extensions like DOM or XMLReader </template> </category>
. <category> <pattern> DO IF YOU PREFER A 3RD PARTY LIB I WOULD SUGGEST NOT TO USE SIMPLEHTMLDOM BUT A LIB THAT ACTUALLY USES DOM LIBXML UNDERNEATH INSTEAD OF STRING PARSING PHPQUERY ZEND DOM QUERYPATH FLUENTDOM OR FDOMDOCUMENT </pattern> <template> <set name="ans"> yes </set>. If you prefer a 3rd party lib I would suggest not to use SimpleHtmlDom but a lib that actually uses DOM libxml underneath instead of String Parsing phpQuery Zend Dom QueryPath FluentDom or fDOMDocument </template> </category>
<category> <pattern> WHAT DO IF YOU PREFER </pattern> <template> <set name="ans"> a 3rd party lib I would suggest not to use SimpleHtmlDom but a lib that actually uses DOM libxml underneath instead of String Parsing phpQuery Zend Dom QueryPath FluentDom or fDOMDocument </set>. If you prefer a 3rd party lib I would suggest not to use SimpleHtmlDom but a lib that actually uses DOM libxml underneath instead of String Parsing phpQuery Zend Dom QueryPath FluentDom or fDOMDocument </template> </category>
<category> <pattern> WHAT PREFERS A 3RD PARTY LIB I WOULD SUGGEST NOT TO USE SIMPLEHTMLDOM BUT A LIB THAT ACTUALLY USES DOM LIBXML UNDERNEATH INSTEAD OF STRING PARSING PHPQUERY ZEND DOM QUERYPATH FLUENTDOM OR FDOMDOCUMENT </pattern> <template> <set name="ans"> If you </set>. If you prefer a 3rd party lib I would suggest not to use SimpleHtmlDom but a lib that actually uses DOM libxml underneath instead of String Parsing phpQuery Zend Dom QueryPath FluentDom or fDOMDocument </template> </category>
. <category> <pattern> DO SO FOR HTML5 YOU WANT WHOTTO TO CONSIDER USING A DEDICATED PARSER LIKE HTML5LIB </pattern> <template> <set name="ans"> yes </set>. So for HTML5 you want to consider using a dedicated parser like html5lib </template> </category>
<category> <pattern> WHAT DO SO FOR HTML5 YOU WANT </pattern> <template> <set name="ans"> WHOTTO to consider using a dedicated parser like html5lib </set>. So for HTML5 you want to consider using a dedicated parser like html5lib </template> </category>
<category> <pattern> WHAT WANTS WHOTTO TO CONSIDER USING A DEDICATED PARSER LIKE HTML5LIB </pattern> <template> <set name="ans"> So for HTML5 you </set>. So for HTML5 you want to consider using a dedicated parser like html5lib </template> </category>
. <category> <pattern> DO OR USE WHOTTO A WEBSERVICE LIKE YQL OR SCRAPERWIKI </pattern> <template> <set name="ans"> yes </set>. Or use a WebService like YQL or ScraperWiki </template> </category>
<category> <pattern> WHAT DO OR USE </pattern> <template> <set name="ans"> WHOTTO a WebService like YQL or ScraperWiki </set>. Or use a WebService like YQL or ScraperWiki </template> </category>
<category> <pattern> WHAT USES WHOTTO A WEBSERVICE LIKE YQL OR SCRAPERWIKI </pattern> <template> <set name="ans"> Or </set>. Or use a WebService like YQL or ScraperWiki </template> </category>
. <category> <pattern> DO IF YOU WANT WHOTTO TO SPEND SOME MONEY HAVE A LOOK AT PHP ARCHITECTS GUIDE TO WEBSCRAPING WITH PHP </pattern> <template> <set name="ans"> yes </set>. If you want to spend some money have a look at PHP Architects Guide to Webscraping with PHP </template> </category>
<category> <pattern> WHAT DO IF YOU WANT </pattern> <template> <set name="ans"> WHOTTO to spend some money have a look at PHP Architects Guide to Webscraping with PHP </set>. If you want to spend some money have a look at PHP Architects Guide to Webscraping with PHP </template> </category>
<category> <pattern> WHAT WANTS WHOTTO TO SPEND SOME MONEY HAVE A LOOK AT PHP ARCHITECTS GUIDE TO WEBSCRAPING WITH PHP </pattern> <template> <set name="ans"> If you </set>. If you want to spend some money have a look at PHP Architects Guide to Webscraping with PHP </template> </category>
. <category> <pattern> DO FINDINF EXTRACT DATA FROM HTML WITH REGULAR EXPRESSIONS MODALOBJ </pattern> <template> <set name="ans"> yes </set>. FINDINF extract data from HTML with Regular Expressions MODALOBJ </template> </category>
<category> <pattern> WHAT DO FINDINF EXTRACT </pattern> <template> <set name="ans"> data from HTML with Regular Expressions MODALOBJ </set>. FINDINF extract data from HTML with Regular Expressions MODALOBJ </template> </category>
<category> <pattern> WHAT EXTRACTS DATA FROM HTML WITH REGULAR EXPRESSIONS MODALOBJ </pattern> <template> <set name="ans"> FINDINF </set>. FINDINF extract data from HTML with Regular Expressions MODALOBJ </template> </category>
. <category> <pattern> IS IN GENERAL USING REGULAR EXPRESSIONS ON HTML DISCOURAGED </pattern> <template> <set name="ans"> yes </set>. In general using Regular Expressions on HTML is discouraged </template> </category>
<category> <pattern> WHAT IS IN GENERAL USING REGULAR EXPRESSIONS ON HTML </pattern> <template> <set name="ans"> discouraged </set>. In general using Regular Expressions on HTML is discouraged </template> </category>
<category> <pattern> WHAT IS DISCOURAGED </pattern> <template> <set name="ans"> In general using Regular Expressions on HTML </set>. In general using Regular Expressions on HTML is discouraged </template> </category>
. <category> <pattern> DO FINDINF USUALLY FIND ON THE WEB TO MATCH MARKUP ARE BRITTLE MODALOBJ </pattern> <template> <set name="ans"> yes </set>. FINDINF usually find on the web to match markup are brittle MODALOBJ </template> </category>
<category> <pattern> WHAT DO FINDINF USUALLY FIND </pattern> <template> <set name="ans"> on the web to match markup are brittle MODALOBJ </set>. FINDINF usually find on the web to match markup are brittle MODALOBJ </template> </category>
<category> <pattern> WHAT FINDS ON THE WEB TO MATCH MARKUP ARE BRITTLE MODALOBJ </pattern> <template> <set name="ans"> FINDINF usually </set>. FINDINF usually find on the web to match markup are brittle MODALOBJ </template> </category>
. <category> <pattern> ARE IN MOST CASES THEY ONLY WORKING FOR A VERY PARTICULAR PIECE OF HTML </pattern> <template> <set name="ans"> yes </set>. In most cases they are only working for a very particular piece of HTML </template> </category>
<category> <pattern> WHAT ARE IN MOST CASES THEY </pattern> <template> <set name="ans"> only working for a very particular piece of HTML </set>. In most cases they are only working for a very particular piece of HTML </template> </category>
<category> <pattern> WHAT IS ONLY WORKING FOR A VERY PARTICULAR PIECE OF HTML </pattern> <template> <set name="ans"> In most cases they </set>. In most cases they are only working for a very particular piece of HTML </template> </category>
. <category> <pattern> DOES ONCE THE MARKUP CHANGE THE REGEX FAILS </pattern> <template> <set name="ans"> yes </set>. Once the markup changes the Regex fails </template> </category>
<category> <pattern> WHAT DOES ONCE THE MARKUP CHANGE </pattern> <template> <set name="ans"> the Regex fails </set>. Once the markup changes the Regex fails </template> </category>
<category> <pattern> WHAT CHANGES THE REGEX FAILS </pattern> <template> <set name="ans"> Once the markup </set>. Once the markup changes the Regex fails </template> </category>
. <category> <pattern> DO ALSO SEE PARSING HTML THE CTHULHU WAY </pattern> <template> <set name="ans"> yes </set>. Also see Parsing Html The Cthulhu Way </template> </category>
<category> <pattern> WHAT DO ALSO SEE </pattern> <template> <set name="ans"> Parsing Html The Cthulhu Way </set>. Also see Parsing Html The Cthulhu Way </template> </category>
<category> <pattern> WHAT SEEK PARSING HTML THE CTHULHU WAY </pattern> <template> <set name="ans"> Also </set>. Also see Parsing Html The Cthulhu Way </template> </category>

</aiml>