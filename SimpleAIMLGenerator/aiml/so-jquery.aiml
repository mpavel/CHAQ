<?xml version="1.0" ?>
<aiml version="1.0">
  <meta content="SimpleAIMLGenerator" name="author"/>
  <meta content="en" name="language"/>
  <category>
    <pattern>
      LIST INTO COLUMN
    </pattern>
    <template>
<![CDATA[<p>So I dug up this article from A List Apart <a href="http://www.alistapart.com/articles/multicolumnlists" rel="nofollow">CSS Swag: Multi-Column Lists</a>.  I ended up using the first solution, it's not the best but the others require either using complex HTML that can't be generated dynamically, or creating a lot of custom classes, which could be done but would require loads of in-line styling and possibly a huge page.</p><br/><br/><p>Other solutions are still welcome though.</p>]]>    </template>
  </category>
  <category>
    <pattern>
      GRAPH VISUAL CODE IN JAVASCRIPT
    </pattern>
    <template>
<![CDATA[<p><a href="http://caitlingannon.com/2007/09/21/jsvis-javascript-visualization-software/" rel="nofollow" title="Araxis Merge">JsVIS</a> is pretty nice, but a little slow with larger graphs.  If yours is small it should work well.  My favorite is <a href="http://prefuse.org/" rel="nofollow">prefuse</a> which apparently now has a Flex front-end now called <a href="http://flare.prefuse.org/" rel="nofollow">flare</a> which could be controlled with JavaScript.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      PRE TAG INSID A CODE TAG WITH JQUERI
    </pattern>
    <template>
<![CDATA[<p>That's the difference between <a href="http://www.w3.org/TR/html4/struct/global.html#h-7.5.3" rel="nofollow">block and inline</a> elements. <a href="http://www.w3.org/TR/html4/sgml/dtd.html#block" rel="nofollow"><code>pre</code> is a block level element</a>. It's not legal to put it inside a <code>code</code> tag, which <a href="http://www.w3.org/TR/html4/struct/text.html#h-9.2.1" rel="nofollow">can only contain inline content</a>.</p><br/><br/><p>Because browsers have to support whatever godawful tag soup they might find on the real web, Firefox tries to do what you mean. IE happens to handle it differently, which is fine by the spec; behavior in that case is unspecified, because it should never happen.</p><br/><br/><ul><br/><li>Could you instead <em>replace</em> the <code>code</code> element with the <code>pre</code>? (Because of the block/inline issue, technically that should only work if the elements are inside <a href="http://www.w3.org/TR/html4/sgml/dtd.html#flow" rel="nofollow">an element with "flow" content</a>, but the browsers might do what you want anyway.)</li><br/><li>Why is it a <code>code</code> element in the first place, if you want <code>pre</code>'s behavior?</li><br/><li>You could also give the <code>code</code> element <code>pre</code>'s whitespace preserving power with the CSS <a href="http://www.blooberry.com/indexdot/css/properties/text/whitespace.htm" rel="nofollow"><code>white-space: pre</code></a>, but apparently <a href="http://www.quirksmode.org/css/whitespace.html" rel="nofollow">IE 6 only honors that in Strict Mode</a>.</li><br/></ul><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      OVERFLOW DIV WITH JAVASCRIPT
    </pattern>
    <template>
<![CDATA[<p><code>scrollHeight</code> should be the total height of content. <code>scrollTop</code> specifies the pixel offset into that content to be displayed at the top of the element's client area.</p><br/><br/><p>So you really want (still using jQuery):</p><br/><br/><pre><code>$("#thediv").each( function() <br/>{<br/>   // certain browsers have a bug such that scrollHeight is too small<br/>   // when content does not fill the client area of the element<br/>   var scrollHeight = Math.max(this.scrollHeight, this.clientHeight);<br/>   this.scrollTop = scrollHeight - this.clientHeight;<br/>});<br/></code></pre><br/><br/><p>...which will set the scroll offset to the last <code>clientHeight</code> worth of content.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      ALPHABET NAVIG
    </pattern>
    <template>
<![CDATA[<p>So, there were plenty of good suggestions, but none did exactly what I wanted. Fortunately I was able to use them to figure out what I really wanted to do. The only thing the following doesn't do is print the last few unused letters (if there are any). That's why I have that cfif statement checking for 'W' as that's the last letter I use, otherwise it should check for Z.</p><br/><br/><pre><code>&lt;cfquery datasource="#application.dsn#" name="qTitles"&gt;<br/>SELECT title, url, substr(titles,1,1) as indexLetter<br/>FROM list<br/>ORDER BY indexLetter,title<br/>&lt;/cfquery&gt;<br/><br/>&lt;cfset linkLetter = "#asc('A')#"&gt;<br/>&lt;cfoutput query="titles" group="indexletter"&gt;<br/>    &lt;cfif chr(linkLetter) eq #qTitles.indexletter#&gt;<br/>        &lt;a href="###ucase(qTitles.indexletter)#"&gt;#ucase(qTitles.indexletter)#&lt;/a&gt;<br/>        &lt;cfif asc('W') neq linkLetter&gt;|&lt;/cfif&gt;<br/>        &lt;cfset linkLetter = ++LinkLetter&gt;<br/>    &lt;cfelse&gt;<br/>        &lt;cfscript&gt;<br/>        while(chr(linkLetter) != qTitles.indexletter)<br/>                {<br/>                        WriteOutput(" " &amp; chr(linkLetter) &amp; " ");<br/>                        IF(linkLetter != asc('W')){WriteOutput("|");};<br/>                        ++LinkLetter;<br/>                }<br/>        &lt;/cfscript&gt;<br/><br/>        &lt;a href="###ucase(qTitles.indexletter)#"&gt;#ucase(qTitles.indexletter)#&lt;/a&gt;<br/>        &lt;cfif asc('W') neq linkLetter&gt;|&lt;/cfif&gt;<br/>        &lt;cfset linkLetter = ++LinkLetter&gt;<br/>    &lt;/cfif&gt;<br/>&lt;/cfoutput&gt;<br/><br/>&lt;ul&gt;<br/>&lt;cfset currentLetter = ""&gt;<br/>&lt;cfoutput query="qTitles" group="title"&gt;<br/>&lt;cfif currentLetter neq #qTitles.indexletter#&gt;<br/>    &lt;li&gt;&lt;a name="#ucase(qTitles.indexletter)#"&gt;#ucase(qTitles.indexletter)#&lt;/a&gt;&lt;/li&gt;<br/>&lt;/cfif&gt;<br/>&lt;cfset currentLetter = #qTitles.indexletter#&gt;<br/>&lt;li&gt;&lt;a href="#url#"&gt;#title#&lt;/a&gt;&lt;/li&gt;<br/>&lt;/cfoutput&gt;<br/>&lt;/ul&gt;<br/></code></pre><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      CODE A DESKTOP APPLICATION LIK MENU BAR IN JAVASCRIPT
    </pattern>
    <template>
<![CDATA[<p><a href="http://extjs.com/deploy/dev/examples/menu/menus.html" rel="nofollow">ExtJS</a> and <a href="http://developer.yahoo.com/yui/menu/" rel="nofollow">YUI</a> have the best menu widgets in my opinion. Both are easy to setup and use and are skinnable. ExtJS will integrate with JQuery.</p><br/><br/><p>The second idea is to use CSS to create your menus if you don't want to use a 3rd party library.A list apart has a <a href="http://www.alistapart.com/articles/horizdropdowns" rel="nofollow">great primer on creating CSS menus</a>.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      VS. UPDATEPANEL
    </pattern>
    <template>
<![CDATA[<p>Don't move to UpdatePanels.  After coming from jQuery, <a href="http://encosia.com/2007/07/11/why-aspnet-ajax-updatepanels-are-dangerous/" rel="nofollow">the drop in performance</a> would be untenable.  Especially on a page as complex as yours sounds.</p><br/><br/><p>If you have 2,000 lines of JavaScript code, the solution is to refactor that code.  If you put 2,000 lines of C# code in one file, it would be difficult to maintain too.  That would be difficult to manage effectively with <strong>any</strong> language or tool.</p><br/><br/><p>If you're using 3.5 SP1, you can use the ScriptManager's new script combining to separate your JavaScript into multiple files with no penalty.  That way, you can logically partition your code just as you would with server side code.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      HTML STRING WITH JQUERI
    </pattern>
    <template>
<![CDATA[<p>Since you're using jQuery, you can just set the element's <code>text</code> property:</p><br/><br/><pre><code>// before:<br/>// &lt;div class="someClass"&gt;text&lt;/div&gt;<br/>var someHtmlString = "&lt;script&gt;alert('hi!');&lt;/script&gt;";<br/>$("div.someClass").text(someHtmlString);<br/>// after: <br/>// &lt;div class="someClass"&gt;&amp;lt;script&amp;gt;alert('hi!');&amp;lt;/script&amp;gt;&lt;/div&gt;<br/></code></pre><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      SELECTOR ENGIN
    </pattern>
    <template>
<![CDATA[<p>A selector engine is used to query a page's DOM for particular elements, based on some sort of query (usually CSS syntax or similar).  </p><br/><br/><p>For example, this jQuery:</p><br/><br/><pre><code>$('div')<br/></code></pre><br/><br/><p>Would search for and return all of the &lt;div&gt; elements on the page.  It uses jQuery's selector engine to do that.</p><br/><br/><p>Optimizing the selector engine is a big deal because almost every operation you perform with these frameworks is based on some sort of DOM query.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      ENCOD IN .GETJSON JQUERI
    </pattern>
    <template>
<![CDATA[<p>I think that you'll probably have to use <a href="http://docs.jquery.com/Ajax/jQuery.ajax#options" rel="nofollow"><code>$.ajax()</code></a> if you want to change the encoding, see the <code>contentType</code> param below (the <code>success</code> and <code>error</code> callbacks assume you have <code>&lt;div id="success"&gt;&lt;/div&gt;</code> and <code>&lt;div id="error"&gt;&lt;/div&gt;</code> in the html):</p><br/><br/><pre><code>$.ajax({<br/>    type: "POST",<br/>    url: "SomePage.aspx/GetSomeObjects",<br/>    contentType: "application/json; charset=utf-8",<br/>    dataType: "json",<br/>    data: "{id: '" + someId + "'}",<br/>    success: function(json) {<br/>        $("#success").html("json.length=" + json.length);<br/>        itemAddCallback(json);<br/>    },<br/>    error: function (xhr, textStatus, errorThrown) {<br/>        $("#error").html(xhr.responseText);<br/>    }<br/>});<br/></code></pre><br/><br/><p>I actually just had to do this about an hour ago, what a coincidence!</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      KEY VALU PAIR TOGETH IN HTML SELECT WITH JQUERI
    </pattern>
    <template>
<![CDATA[<p>Like lucas said the value attribute is what you need. Using your code it would look something like this ( I added an id attribute to the select to make it fit ):</p><br/><br/><pre><code>$select = $('&lt;select id="mySelect"&gt;&lt;/select&gt;');<br/>$select.append('&lt;option value="1"&gt;Jason&lt;/option&gt;') //Key = 1<br/>   .append('&lt;option value="32"&gt;John&lt;/option&gt;') //Key = 32<br/>   .append('&lt;option value="423"&gt;Paul&lt;/option&gt;') //Key = 423<br/></code></pre><br/><br/><p>jQuery lets you get the value using the val() method. Using it on the select tag you get the current selected option's value.</p><br/><br/><pre><code>$( '#mySelect' ).val(); //Gets the value for the current selected option<br/><br/>$( '#mySelect &gt; option' ).each( function( index, option ) {<br/>    option.val(); //The value for each individual option<br/>} );<br/></code></pre><br/><br/><p>Just in case, the .each method loops throught every element the query matched.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      LEARN JQUERI IS IT WORTH IT
    </pattern>
    <template>
<![CDATA[<p>Rick Strahl and Matt Berseth's blogs both tipped me into jQuery and man am I glad they did. jQuery completely changes a) your client programming perspective, b) the grief it causes it you, and c) how much fun it can be! </p><br/><br/><p><a href="http://www.west-wind.com/weblog/" rel="nofollow">http://www.west-wind.com/weblog/</a></p><br/><br/><p><a href="http://mattberseth.com/" rel="nofollow">http://mattberseth.com/</a></p><br/><br/><p>I used the book jQuery in Action <br/><a href="http://rads.stackoverflow.com/amzn/click/1933988355" rel="nofollow">http://www.amazon.com/jQuery-Action-Bear-Bibeault/dp/1933988355/ref=sr_1_1?ie=UTF8&amp;s=books&amp;qid=1219716122&amp;sr=1-1</a> (I bought it used at Amazon for about $22). It has been a big help into bootstrapping me into jQuery. The documentation at jquery.com are also very helpful.</p><br/><br/><p>A place where jQuery falls a little flat is with its UI components. Those don't seem to be quite ready for primetime just yet. </p><br/><br/><p>It could be that <a href="http://en.wikipedia.org/wiki/Prototype%5FJavaScript%5FFramework" rel="nofollow">Prototype</a> or <a href="http://en.wikipedia.org/wiki/MooTools" rel="nofollow">MooTools</a> or <a href="http://en.wikipedia.org/wiki/Ext%5F%28JavaScript%5Flibrary%29" rel="nofollow">ExtJS</a> are as good as jQuery. But for me, jQuery seems to have a little more momentum behind it right now and that counts for something for me. </p><br/><br/><p>Check jQuery out. It is very cool! </p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      BEST JQUERI PLUGIN LIBRARI ON THE WEB
    </pattern>
    <template>
<![CDATA[<p>This is the best place to start: <a href="http://plugins.jquery.com/" rel="nofollow">http://plugins.jquery.com/</a></p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      HANDL ERROR WHEN USE JQUERY.AJAX ( )
    </pattern>
    <template>
<![CDATA[<blockquote><br/>  <p>Should I be throwing the errors in the<br/>  ashx, or should I be returning a<br/>  status code as part of the data<br/>  returned by the call to<br/>  userCreation.ashx, then using this to<br/>  decide what action to take? How do you<br/>  handle these situations?</p><br/></blockquote><br/><br/><p>Personally, if possible, I would prefer to handle this on the server side and work up a message to the user there. This works very well in a scenario where you only want to display a message to the user telling them what happened (validation message, essentially).</p><br/><br/><p>However, if you want to perform an action based on what happened on the server, you may want to use a status code and write some javascript to perform various actions based on that status code.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      EMOD BREAK ASP.NET POSTBACK
    </pattern>
    <template>
<![CDATA[<p>Both of you were on the right track.  What I realized is that SimpleModal appends the dialog to the body, which is outside ASP.Net's <code>&lt;form&gt;</code>, which breaks the functionality, since it can't find the elements.</p><br/><br/><p>To fix it, I just modified the SimpleModal source to append eveything to <code>'form'</code> instead of <code>'body'</code>.  When I create the dialog, I also use the <code>persist: true</code> option, to make sure the buttons stay through opening and closing.</p><br/><br/><p>Thanks everyone for the suggestions!</p><br/><br/><p><em>UPDATE:</em> Version 1.3 adds an <code>appendTo</code> option in the configuration for specifying which element the modal dialog should be appended to. <a href="http://www.ericmmartin.com/projects/simplemodal/#options" rel="nofollow">Here are the docs</a>.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      COORDIN OF THE CARET IN TEXT BOX
    </pattern>
    <template>
<![CDATA[<p>After I read this question I decided to make my first jQuery plugin as the question was interesting, it's still buggy but I plan on having it working fully in a short time.</p><br/><br/><p>It should return the absolute distance from the top and left side of the screen</p><br/><br/><p><a href="http://plugins.jquery.com/project/caretPosition" rel="nofollow">caretPosition</a></p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      AN HTML ENTITI WITH JQUERI
    </pattern>
    <template>
<![CDATA[<p>When the HTML is parsed, what JQuery sees in the DOM is a <code>UPWARDS DOUBLE ARROW</code> ("⇑"), not the entity reference. Thus, in your Javascript code you should test for <code>"⇑"</code> or <code>"\u21d1"</code>. Also, you need to change what you're switching to:</p><br/><br/><pre><code>function expandCollapse(id) {<br/>    var arrow = $("#"+id+" span").html();<br/>    if(arrow == "\u21d1") {     <br/>        $("#"+id+" span").html("\u21d3");                           <br/>    } else {            <br/>        $("#"+id+" span").html("\u21d1");                           <br/>    }<br/>}<br/></code></pre><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      FIRE AN EVENT WHEN A IFRAM HA FINISH LOAD IN JQUERI
    </pattern>
    <template>
<![CDATA[<p>I'm pretty certain that it cannot be done.</p><br/><br/><p>Pretty much anything else than PDF works, even Flash. (Tested on Safari, Firefox 3, IE 7)</p><br/><br/><p>Too bad.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      RECEIV A Q NUM ERROR WHEN ABORT A JQUERI QUEUE PIPELIN
    </pattern>
    <template>
<![CDATA[<p>It looks like you've got fewer items in q than you were expecting when you started iterating. Your script may be trying to access q[q.length], i.e. the element after the last element.</p><br/><br/><p>Could it be that your successful request has been popped from the queue, and you have a race condition? Are you trying to abort a request that has already completed its life cycle? Alternatively, have you made a silly mistake as people sometimes do, and got your loop termination condition wrong?</p><br/><br/><p>Just a few thoughts, I hope they help.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      EXIST FUNCTION FOR JQUERI
    </pattern>
    <template>
<![CDATA[<p>Yes!</p><br/><br/><pre><code>jQuery.fn.exists = function(){return this.length&gt;0;}<br/><br/>if ($(selector).exists()) {<br/>    // Do something<br/>}<br/></code></pre><br/><br/><p>There you go!</p><br/><br/><p>This is in response to: <a href="http://herdingcode.com/?p=36">Herding Code podcast with Jeff Atwood</a></p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      RETURN A VARIABL FROM A .GETJSON FUNCTION
    </pattern>
    <template>
<![CDATA[<p>Yeah, my previous answer does not work because I didn't pay any attention to your code. :)</p><br/><br/><p>The problem is that the anonymous function is a callback function - i.e. getJSON is an async operation that will return at some indeterminate point in time, so even if the scope of the variable were outside of that anonymous function (i.e. a closure), it would not have the value you would think it should:</p><br/><br/><pre><code>var studentId = null;<br/>j.getJSON(url, data, function(result)<br/>{<br/>    studentId = result.Something;<br/>});<br/><br/>// studentId is still null right here, because this line <br/>// executes before the line that sets its value to result.Something<br/></code></pre><br/><br/><p>Any code that you want to execute with the value of studentId set by the getJSON call needs to happen either <strong>within</strong> that callback function or <strong>after</strong> the callback executes.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      UNIT TEST
    </pattern>
    <template>
<![CDATA[<p>In the last couple of days I've also been looking for javascript unit-testing frameworks, but I still haven't decided on one. </p><br/><br/><ul><br/><li><p>This one, <a href="http://docs.jquery.com/QUnit">QUnit</a>, looks interesting.  QUnit is the unit testrunner for the jQuery project</p></li><br/><li><p>Also, <a href="http://ejohn.org/blog/fireunit/">FireUnit</a>, a FireBug extension, was recently launched.  FireUnit provides a simple JavaScript API for doing simple test logging and viewing within a new tab of Firebug.</p></li><br/></ul><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      BETWEEN WEBSIT ( USE JAVASCRIPT OR )
    </pattern>
    <template>
<![CDATA[<p>My best suggestion would be to create a webservice on each site that the other could call with the information that needs to get passed. If security is necessary, it's easy to add an SSL-like authentication scheme (or actual SSL even, if you like) to this system to ensure that only the two servers are able to talk to their respective web services.</p><br/><br/><p>This would let you avoid the hackiness that's inherent in any scheme that involves one site opening windows on the other.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      SWAP DIV ON MOUSEOV ( JQUERI )
    </pattern>
    <template>
<![CDATA[<pre><code>$(document).ready(function() {<br/>    switches = $('#switches &gt; li');<br/>    slides = $('#slides &gt; div');<br/>    switches.each(function(idx) {<br/>            $(this).data('slide', slides.eq(idx));<br/>        }).hover(<br/>        function() {<br/>            switches.removeClass('active');<br/>            slides.removeClass('active');             <br/>            $(this).addClass('active');  <br/>            $(this).data('slide').addClass('active');<br/>        });<br/>    });<br/></code></pre><br/><br/><p>Rather than displaying all slides when JS is off (which would likely break the page layout) I would place inside the switch LIs real A links to server-side code which returns the page with the "active" class pre-set on the proper switch/slide.</p><br/><br/><p>And here's the HTML:</p><br/><br/><pre><code>&lt;html&gt;<br/>&lt;head&gt;<br/><br/>&lt;title&gt;test&lt;/title&gt;<br/><br/>&lt;script type="text/javascript" src="jquery.js"&gt;&lt;/script&gt;<br/>&lt;script type="text/javascript" src="switch.js"&gt;&lt;/script&gt;<br/><br/>&lt;style type="text/css"&gt;<br/><br/>#switches .active {<br/>  font-weight: bold;<br/>}<br/><br/>#slides div {<br/>  display: none;<br/>}<br/><br/>#slides div.active {<br/>  display: block;<br/>}<br/><br/>&lt;/style&gt;<br/>&lt;/head&gt;<br/>&lt;body&gt;<br/><br/>&lt;ul id="switches"&gt;<br/>  &lt;li class="active"&gt;First slide&lt;/li&gt;<br/>  &lt;li&gt;Second slide&lt;/li&gt;<br/>  &lt;li&gt;Third slide&lt;/li&gt;<br/>  &lt;li&gt;Fourth slide&lt;/li&gt;<br/>&lt;/ul&gt;<br/>&lt;div id="slides"&gt;<br/>  &lt;div class="active"&gt;Well well.&lt;/div&gt;<br/>  &lt;div&gt;Oh no!&lt;/div&gt;<br/>  &lt;div&gt;You again?&lt;/div&gt;<br/>  &lt;div&gt;I'm gone!&lt;/div&gt;<br/>&lt;/div&gt;<br/><br/>&lt;/body&gt;<br/>&lt;/html&gt;<br/></code></pre><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      WITH JQUERI FORM BIND CODE IN AN APPLIC
    </pattern>
    <template>
<![CDATA[<p>Not 100% sure example what you are asking, but personally, and I use MochiKit, I create JavaScript "classes" (or widgets, if you prefer) for every significant client-side UI structure. These know, of course, how to populate themselves with data.</p><br/><br/><p>I don't know what more there is to say - writing UI code for the browser in JavaScript is no different than writing UI code for other types of apps, as far as I am concerned. Build classes and instantiate them as needed, populate them with data, have them throw events, etc. etc.</p><br/><br/><p>Am I up in the night on this? :)</p><br/><br/><p><hr /></p><br/><br/><p>EDIT: In other words, yes - do what you are doing, for the most part. I see too many novice JavaScript hackers write a bunch of poorly-cohesive functions that don't appear to be a part of anything specific other than they are all in a single file. Hope that makes sense. </p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      JQUERI DATEPICK
    </pattern>
    <template>
<![CDATA[<p>I'd recommend just using a common class name as well.  However, if you're against this for some reason, you could also write a function to create date pickers for all text boxes in your template div (to be called after each duplication).  Something like:</p><br/><br/><pre><code>        function makeDatePickers()<br/>        {<br/>            $("#template input[type=text]").datepicker();<br/>        }<br/></code></pre><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      FLUID ROUND CORNER WITH JQUERI
    </pattern>
    <template>
<![CDATA[<p>I use: <a href="http://jrc.meerbox.nl/?page_id=4" rel="nofollow">Jquery-roundcorners-canvas</a></p><br/><br/><p>it handles borders, and keeps things the same size, in fact you have to pad in a bit to keep from having letters live in the crease. Its pretty fast, unless you are on ie 6.<br/>Same pretty syntax of the other corner packs, but just prettier in general.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      PREVIEW THEME IN WORDPRESS
    </pattern>
    <template>
<![CDATA[<p>It's open source - use the source, Luke.</p><br/><br/><p>Look in wp-admin/js/theme-preview.js</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      ADVIC FOR JQUERI AJAX DATA POST
    </pattern>
    <template>
<![CDATA[<p>Any request that the AJAX calls in your pages can make can also be made by someone outside of the application.  If done right, you will not be able to tell if they were made as part of an AJAX call from your webapp or by hand/other means.</p><br/><br/><p>There are two scenarios I can think of which you might be talking about when you say you want to make sure that only your AJAX calls can post data: either you don't want a malicious user to be able to post data that interferes with another user's data or you actually want to restrict the posts to being in the "flow" of a multi-request operation.  </p><br/><br/><p>If you are concerned with the first case (someone posting malicious data to/as another user) the solution is the same whether you are using AJAX or not -- you just have to authenticate the user through whatever means is necessary -- usually via session cookie.</p><br/><br/><p>If you are concerned with the second case, then you are going to have to do something like issue a unique token at each step of the process, and store the expected token on the server side.  Then when a request is made, check that there is a corresponding entry on the server side for the action that is being taken and that the expected tokens match and that that token has not been used yet.  If there is no, you reject the request, if there is, then you mark that token as used and process the request.</p><br/><br/><p>If what you are concerned about is something other than one of these two scenarios then the answer will depend on more specifics than you have provided.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      CAN NOT JQUERI MY PAGE UNDER INTERNET EXPLOR
    </pattern>
    <template>
<![CDATA[<p>Try upgrading to jQuery 1.2.6, you should be on the latest release of jQuery if you are having problems first ensure you are on the latest and greatest.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      PROTOTYP SELECTOR MAD
    </pattern>
    <template>
<![CDATA[<p>It looks like I just needed to be more specific in my element selector although it is weird that a hard coded number would work.</p><br/><br/><pre><code>jQuery('#pagination-digg li').eq(currentPage).addClass("active");<br/></code></pre><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      BIT OF JS OR JQUERI FOR HORIZONT SCROLL NEWS TICKER
    </pattern>
    <template>
<![CDATA[<p>Smooth Div Scroll can also be used as a news ticker/stock ticker. It can pause on mouse over or mouse down and it can loop endlessly if you want it to.</p><br/><br/><p>Here's the example with a running ticker:<br/><a href="http://www.maaki.com/" rel="nofollow">http://www.maaki.com/</a></p><br/><br/><p>Regards,<br/>Thomas</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      SPIN WAIT HOURGLASS TYP THING
    </pattern>
    <template>
<![CDATA[<p>Google "Ajax activity indicator" to find lots of images and image generators (the "spinning" image itself is an animated GIF). </p><br/><br/><p>Here is one link to get you started:<br/><a href="http://www.ajaxload.info/" rel="nofollow">http://www.ajaxload.info/</a></p><br/><br/><p>With the image in hand, use JQuery to toggle the visibility of the image (or perhaps its parent DIV tag). See this link for some more info:</p><br/><br/><p><a href="http://skfox.com/2008/04/28/jquery-example-ajax-activity-indicator/" rel="nofollow">http://skfox.com/2008/04/28/jquery-example-ajax-activity-indicator/</a></p><br/><br/><p>rp</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      TABLESORT PLUGIN
    </pattern>
    <template>
<![CDATA[<p>This is a common layout problem in IE.  If you are using CSS to style the columns width, also add the column widths to the td tags.  Set the first column to a percentage that will try to suck up most of the space, like 50% or something.  The first column width will take everything that it can and the other columns will abide by their static width.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      PAUS BEFOR FADE AN ELEMENT OUT USE JQUERI
    </pattern>
    <template>
<![CDATA[<p>The new <code>delay()</code> function in jQuery 1.4 should do the trick.</p><br/><br/><pre><code>$('#foo').fadeIn(200).delay(5000).fadeOut(200).remove();<br/></code></pre><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      THE JQUERI DIALOG WORK WITH THE THEMEROL THEME
    </pattern>
    <template>
<![CDATA[<p>The solution was found in <a href="http://stackoverflow.com/questions/45600/a-problem-with-the-jquery-dialog-when-using-the-themeroller-css">a similar question</a> I posted:</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      SLICE AND CLICK EVENT
    </pattern>
    <template>
<![CDATA[<p>The following selector should also work in jQuery: <code>'input:checkbox'</code>.</p><br/><br/><p>You can then string the <code>:gt(index)</code> and <code>:lt(index)</code> filters together, so if you want the 5th to 7th checkboxes, you'd use <code>'input:checkbox:gt(4):lt(2)'</code>.</p><br/><br/><p>To get the index of the currently clicked checkbox, just use <code>$("input:checkbox").index($(this))</code>.</p><br/>]]>    </template>
  </category>
  <category>
    <pattern>
      CAN YOU SELECT BY CSS RULE NOT CLASS
    </pattern>
    <template>
<![CDATA[<pre><code>$(".container .component").each(function()<br/>{<br/>    $(".container", this).each(function() {<br/>        if($(this).css('width') == 'auto')<br/>        {<br/>            $(this).css('border', '1px solid #f00');<br/>        }<br/>    });<br/>});<br/></code></pre><br/><br/><p>Similar to the other answer but since components can also have multiple containers, also needs the .each() check in here too for the width.</p><br/>]]>    </template>
  </category>
</aiml>
